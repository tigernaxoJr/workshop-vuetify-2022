<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>建立專案 on KTGH Vuetify Workshop 2022</title>
    <link>https://tigernaxojr.github.io/workshop-vuetify-2022/02project/</link>
    <description>Recent content in 建立專案 on KTGH Vuetify Workshop 2022</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Dec 2022 14:43:54 +0800</lastBuildDate><atom:link href="https://tigernaxojr.github.io/workshop-vuetify-2022/02project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>建立專案</title>
      <link>https://tigernaxojr.github.io/workshop-vuetify-2022/02project/01create/</link>
      <pubDate>Tue, 13 Dec 2022 14:43:54 +0800</pubDate>
      
      <guid>https://tigernaxojr.github.io/workshop-vuetify-2022/02project/01create/</guid>
      <description> Create Vuetify Project 建立專案 啟動專案 專案架構 Reference Create Vuetify Project建立專案輸入 npm create vuetify 如果提示要安裝 create-vuetify 選 Y。 輸入專案名稱(這裡用 vue3-app)、Use Typescript 選 No、安裝程式選 npm。
vuetify-cli 在建立完專案之後就會自動安裝套件
啟動專案進入專案資料夾 cd v3-app 以 VSCode 打開專案 code . ctrl+`打開 console 啟動開發伺服器 npm run dev 結果：
瀏覽器打開網址 http://127.0.0.1:3000/
專案架構ReferenceVuetify-next </description>
    </item>
    
    <item>
      <title>設置專案</title>
      <link>https://tigernaxojr.github.io/workshop-vuetify-2022/02project/02conf/</link>
      <pubDate>Tue, 13 Dec 2022 14:46:54 +0800</pubDate>
      
      <guid>https://tigernaxojr.github.io/workshop-vuetify-2022/02project/02conf/</guid>
      <description> Vite Server Proxy Linting/Formating .eslintrc.js .prettierrc.js Reference Vite Server Proxy打開 vite.config.js，找到 server，以下設置會使 axios.get(&#39;/api/A&#39;) 等價於 axios.get(&#39;http://localhost:4567/api/A&#39;)，避免開發時會遇到的跨域問題。
server: { port: 3000, proxy: { // http://localhost:3000/api -&amp;gt; http://localhost:4567api/ &amp;#39;/api&amp;#39;: &amp;#39;http://localhost:4567&amp;#39;, } }, Linting/Formating.eslintrc.jsmodule.exports = { extends: [&amp;#34;plugin:vue/essential&amp;#34;, &amp;#34;eslint:recommended&amp;#34;, &amp;#34;@vue/prettier&amp;#34;], parserOptions: { parser: &amp;#34;babel-eslint&amp;#34; }, rules: { semi: [&amp;#34;error&amp;#34;, &amp;#34;always&amp;#34;], &amp;#34;no-console&amp;#34;: &amp;#34;off&amp;#34; } }; .prettierrc.jsmodule.exports = { semi: false, singleQuote: true, arrowParens: &amp;#34;avoid&amp;#34; }; Referencevite-config </description>
    </item>
    
    <item>
      <title>靜態資源</title>
      <link>https://tigernaxojr.github.io/workshop-vuetify-2022/02project/03resource/</link>
      <pubDate>Tue, 13 Dec 2022 14:46:54 +0800</pubDate>
      
      <guid>https://tigernaxojr.github.io/workshop-vuetify-2022/02project/03resource/</guid>
      <description> 光田自造字 Reference 院內無法連外網的電腦讀不到外部 cdn 資源，因此 font、icon、等等&amp;hellip;都要放在專案內，或使用院內的資源
光田自造字css 加入這一段，會不定時更新
@font-face { font-family: &amp;#34;EUDC&amp;#34;; font-style: normal; src: url(&amp;#39;https://m-med.ktgh.com.tw/CDN/fonts/EUDC.woff2&amp;#39;) format(&amp;#39;woff2&amp;#39;), url(&amp;#39;https://m-med.ktgh.com.tw/CDN/fonts/EUDC.woff&amp;#39;) format(&amp;#39;woff&amp;#39;), url(&amp;#39;https://m-med.ktgh.com.tw/CDN/fonts/EUDC.ttf&amp;#39;) format(&amp;#39;truetype&amp;#39;); } * { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; font-family: &amp;#39;其他優先使用的字型&amp;#39;, &amp;#39;EUDC&amp;#39;, sans-serif; font-display: auto; } Referencewordpress-[Web] 網頁顯示光田自造字 </description>
    </item>
    
  </channel>
</rss>
